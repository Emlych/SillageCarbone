{
	"./client/src/components/Button.tsx": [
		{
			"description": "Custom button component",
			"methods": [],
			"displayName": "Button",
			"props": {
				"buttonText": {
					"required": true,
					"tsType": { "name": "string" },
					"description": ""
				},
				"buttonType": {
					"required": true,
					"tsType": {
						"name": "union",
						"raw": "\"button\" | \"submit\" | \"reset\"",
						"elements": [
							{ "name": "literal", "value": "\"button\"" },
							{ "name": "literal", "value": "\"submit\"" },
							{ "name": "literal", "value": "\"reset\"" }
						]
					},
					"description": ""
				},
				"callback": {
					"required": false,
					"tsType": {
						"name": "MouseEventHandler",
						"elements": [{ "name": "HTMLButtonElement" }],
						"raw": "MouseEventHandler<HTMLButtonElement>"
					},
					"description": ""
				},
				"disabled": {
					"required": false,
					"tsType": { "name": "boolean" },
					"description": ""
				},
				"alert": { "required": false, "tsType": { "name": "boolean" }, "description": "" }
			}
		}
	],
	"./client/src/components/CarousselCard.tsx": [
		{
			"description": "",
			"methods": [],
			"displayName": "CarousselCard",
			"props": {
				"product": {
					"required": true,
					"tsType": {
						"name": "signature",
						"type": "object",
						"raw": "{\n\t_id: number;\n\tname: string;\n\tcompany: string;\n\tco2: number;\n}",
						"signature": {
							"properties": [
								{ "key": "_id", "value": { "name": "number", "required": true } },
								{ "key": "name", "value": { "name": "string", "required": true } },
								{ "key": "company", "value": { "name": "string", "required": true } },
								{ "key": "co2", "value": { "name": "number", "required": true } }
							]
						}
					},
					"description": ""
				}
			}
		}
	],
	"./client/src/components/PageFooter.tsx": [
		{
			"description": "",
			"methods": [],
			"displayName": "PageFooter",
			"props": {
				"page": { "required": true, "tsType": { "name": "number" }, "description": "" },
				"maxNumberOfPages": {
					"required": true,
					"tsType": { "name": "number" },
					"description": ""
				},
				"setPage": {
					"required": true,
					"tsType": {
						"name": "ReactDispatch",
						"raw": "React.Dispatch<React.SetStateAction<number>>",
						"elements": [
							{
								"name": "ReactSetStateAction",
								"raw": "React.SetStateAction<number>",
								"elements": [{ "name": "number" }]
							}
						]
					},
					"description": ""
				}
			}
		}
	],
	"./client/src/components/Input.tsx": [
		{
			"description": "Custom Input component",
			"methods": [],
			"displayName": "Input",
			"props": {
				"faIcon": {
					"required": true,
					"tsType": {
						"name": "FontAwesomeIconProps[\"icon\"]",
						"raw": "FontAwesomeIconProps[\"icon\"]"
					},
					"description": ""
				},
				"placeholderText": {
					"required": true,
					"tsType": { "name": "string" },
					"description": ""
				},
				"data-testid": {
					"required": true,
					"tsType": { "name": "string" },
					"description": ""
				},
				"onChange": {
					"required": true,
					"tsType": {
						"name": "signature",
						"type": "function",
						"raw": "(\n\tevent: React.ChangeEvent<HTMLInputElement>,\n\ttype?: \"name\" | \"start-date\" | \"finish-date\"\n) => void",
						"signature": {
							"arguments": [
								{
									"type": {
										"name": "ReactChangeEvent",
										"raw": "React.ChangeEvent<HTMLInputElement>",
										"elements": [{ "name": "HTMLInputElement" }]
									},
									"name": "event"
								},
								{
									"type": {
										"name": "union",
										"raw": "\"name\" | \"start-date\" | \"finish-date\"",
										"elements": [
											{ "name": "literal", "value": "\"name\"" },
											{ "name": "literal", "value": "\"start-date\"" },
											{ "name": "literal", "value": "\"finish-date\"" }
										]
									},
									"name": "type"
								}
							],
							"return": { "name": "void" }
						}
					},
					"description": ""
				},
				"value": {
					"required": false,
					"tsType": {
						"name": "union",
						"raw": "string | number",
						"elements": [{ "name": "string" }, { "name": "number" }]
					},
					"description": ""
				},
				"type": {
					"required": false,
					"tsType": {
						"name": "union",
						"raw": "\"text\" | \"password\" | \"number\" | \"email\"",
						"elements": [
							{ "name": "literal", "value": "\"text\"" },
							{ "name": "literal", "value": "\"password\"" },
							{ "name": "literal", "value": "\"number\"" },
							{ "name": "literal", "value": "\"email\"" }
						]
					},
					"description": ""
				}
			}
		}
	],
	"./client/src/components/DateInput.tsx": [
		{
			"description": "Custom Input component",
			"methods": [],
			"displayName": "DateInput",
			"props": {
				"value": { "required": true, "tsType": { "name": "Date" }, "description": "" },
				"type": {
					"required": true,
					"tsType": {
						"name": "union",
						"raw": "\"start-date\" | \"finish-date\"",
						"elements": [
							{ "name": "literal", "value": "\"start-date\"" },
							{ "name": "literal", "value": "\"finish-date\"" }
						]
					},
					"description": ""
				},
				"onChange": {
					"required": true,
					"tsType": {
						"name": "signature",
						"type": "function",
						"raw": "(\n\tevent: React.ChangeEvent<HTMLInputElement>,\n\ttype: \"name\" | \"start-date\" | \"finish-date\"\n) => void",
						"signature": {
							"arguments": [
								{
									"type": {
										"name": "ReactChangeEvent",
										"raw": "React.ChangeEvent<HTMLInputElement>",
										"elements": [{ "name": "HTMLInputElement" }]
									},
									"name": "event"
								},
								{
									"type": {
										"name": "union",
										"raw": "\"name\" | \"start-date\" | \"finish-date\"",
										"elements": [
											{ "name": "literal", "value": "\"name\"" },
											{ "name": "literal", "value": "\"start-date\"" },
											{ "name": "literal", "value": "\"finish-date\"" }
										]
									},
									"name": "type"
								}
							],
							"return": { "name": "void" }
						}
					},
					"description": ""
				}
			}
		}
	],
	"./client/src/components/CardItem.tsx": [
		{
			"description": "Custom CardItem component",
			"methods": [],
			"displayName": "CardItem",
			"props": {
				"text": { "required": true, "tsType": { "name": "string" }, "description": "" },
				"faIcon": {
					"required": true,
					"tsType": {
						"name": "FontAwesomeIconProps[\"icon\"]",
						"raw": "FontAwesomeIconProps[\"icon\"]"
					},
					"description": ""
				}
			}
		}
	],
	"./client/src/components/SideNavigation.tsx": [
		{
			"description": "",
			"methods": [],
			"displayName": "SideNavigation",
			"props": {
				"menuItems": {
					"required": true,
					"tsType": {
						"name": "Array",
						"elements": [
							{
								"name": "signature",
								"type": "object",
								"raw": "{\n\ttext: string;\n\tlevel: number;\n\tonClick: () => void;\n\ticon?: FontAwesomeIconProps[\"icon\"];\n}",
								"signature": {
									"properties": [
										{ "key": "text", "value": { "name": "string", "required": true } },
										{ "key": "level", "value": { "name": "number", "required": true } },
										{
											"key": "onClick",
											"value": {
												"name": "signature",
												"type": "function",
												"raw": "() => void",
												"signature": { "arguments": [], "return": { "name": "void" } },
												"required": true
											}
										},
										{
											"key": "icon",
											"value": {
												"name": "FontAwesomeIconProps[\"icon\"]",
												"raw": "FontAwesomeIconProps[\"icon\"]",
												"required": false
											}
										}
									]
								}
							}
						],
						"raw": "{\n\ttext: string;\n\tlevel: number;\n\tonClick: () => void;\n\ticon?: FontAwesomeIconProps[\"icon\"];\n}[]"
					},
					"description": ""
				}
			}
		}
	],
	"./client/src/components/Dropdown.tsx": [
		{
			"description": "",
			"methods": [],
			"displayName": "Dropdown",
			"props": {
				"options": {
					"required": true,
					"tsType": {
						"name": "union",
						"raw": "Map<number | T, T> | null",
						"elements": [
							{
								"name": "Map",
								"elements": [
									{
										"name": "union",
										"raw": "number | T",
										"elements": [{ "name": "number" }, { "name": "T" }]
									},
									{ "name": "T" }
								],
								"raw": "Map<number | T, T>"
							},
							{ "name": "null" }
						]
					},
					"description": ""
				},
				"handleSelectInput": {
					"required": true,
					"tsType": { "name": "Function" },
					"description": ""
				}
			}
		}
	]
}
